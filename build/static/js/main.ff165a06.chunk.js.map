{"version":3,"sources":["components/table.tsx","components/select.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","useEffect","currentData","setState","columns","data","liftStateUpFunc","state","React","useState","editableObj","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","icons","title","tableTitle","editable","localization","header","actions","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","editRow","cancelTooltip","saveTooltip","toolbar","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","value","setValue","FormControl","className","InputLabel","id","labelID","labelText","Select","labelId","selectID","onChange","event","target","menuItems","map","elem","MenuItem","App","updateColumns","tableData","updateTableData","selectedOptions","updateOptions","field","type","lookup","34","63","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff165a06.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport MaterialTable, { Column } from 'material-table';\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { Interface } from 'readline';\n\nconst tableIcons: any = {\n\tAdd: forwardRef((props: any, ref: any) => <AddBox {...props} ref={ref} />),\n\tCheck: forwardRef((props: any, ref: any) => <Check {...props} ref={ref} />),\n\tClear: forwardRef((props: any, ref: any) => <Clear {...props} ref={ref} />),\n\tDelete: forwardRef((props: any, ref: any) => <DeleteOutline {...props} ref={ref} />),\n\tDetailPanel: forwardRef((props: any, ref: any) => <ChevronRight {...props} ref={ref} />),\n\tEdit: forwardRef((props: any, ref: any) => <Edit {...props} ref={ref} />),\n\tExport: forwardRef((props: any, ref: any) => <SaveAlt {...props} ref={ref} />),\n\tFilter: forwardRef((props: any, ref: any) => <FilterList {...props} ref={ref} />),\n\tFirstPage: forwardRef((props: any, ref: any) => <FirstPage {...props} ref={ref} />),\n\tLastPage: forwardRef((props: any, ref: any) => <LastPage {...props} ref={ref} />),\n\tNextPage: forwardRef((props: any, ref: any) => <ChevronRight {...props} ref={ref} />),\n\tPreviousPage: forwardRef((props: any, ref: any) => <ChevronLeft {...props} ref={ref} />),\n\tResetSearch: forwardRef((props: any, ref: any) => <Clear {...props} ref={ref} />),\n\tSearch: forwardRef((props: any, ref: any) => <Search {...props} ref={ref} />),\n\tSortArrow: forwardRef((props: any, ref: any) => <ArrowDownward {...props} ref={ref} />),\n\tThirdStateCheck: forwardRef((props: any, ref: any) => <Remove {...props} ref={ref} />),\n\tViewColumn: forwardRef((props: any, ref: any) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\n\ninterface TableProps {\n\tliftStateUpFunc: (data: any) => any;\n\tcolumns: any;\n\ttableTitle: string;\n\tcurrentData: any;\n\n}\n\nexport default function Table(props: TableProps) {\n\n\t// интерфейс у нас будет динамическим, так что пока это уберем\n\t/* interface Row {\n\t\tname: string;\n\t\tsurname: string;\n\t\tbirthYear: number;\n\t\tbirthCity: number;\n\t} */\n\n\tinterface TableState {\n\t\tcolumns: Array<Column<any>>;\n\t\tdata: any[];\n\t}\n\n\t// поднимаем состояние до родителя здесь\n\tuseEffect(() => {\n\t\tif (props.currentData === false) {\n\t\t\tsetState({\n\t\t\t\tcolumns: props.columns,\n\t\t\t\tdata: [],\n\t\t\t})\n\t\t};\n\t\tprops.liftStateUpFunc(state.data);\n\t});\n\n\tconst [state, setState] = React.useState<TableState>({\n\t\tcolumns: props.columns,\n\t\tdata: [],\n\t});\n\n\tconst editableObj = {\n\t\tonRowAdd: (newData: any) =>\n\t\t\tnew Promise((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t\tsetState((prevState) => {\n\t\t\t\t\t\tconst data = [...prevState.data];\n\t\t\t\t\t\tdata.push(newData);\n\t\t\t\t\t\treturn { ...prevState, data };\n\t\t\t\t\t});\n\t\t\t\t}, 600);\n\t\t\t}),\n\t\tonRowUpdate: (newData: any, oldData: any) =>\n\t\t\tnew Promise((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t\tif (oldData) {\n\t\t\t\t\t\tsetState((prevState) => {\n\t\t\t\t\t\t\tconst data = [...prevState.data];\n\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\n\t\t\t\t\t\t\treturn { ...prevState, data };\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, 600);\n\t\t\t}),\n\t\tonRowDelete: (oldData: any) =>\n\t\t\tnew Promise((resolve) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t\tsetState((prevState) => {\n\t\t\t\t\t\tconst data = [...prevState.data];\n\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\n\t\t\t\t\t\treturn { ...prevState, data };\n\t\t\t\t\t});\n\t\t\t\t}, 600);\n\t\t\t}),\n\t};\n\n\treturn (\n\t\t<MaterialTable\n\t\t\ticons={tableIcons}\n\t\t\ttitle={props.tableTitle}\n\t\t\tcolumns={props.columns}\n\t\t\tdata={props.currentData}\n\t\t\teditable={editableObj}\n\t\t\tlocalization={{\n\t\t\t\theader: {\n\t\t\t\t\tactions: 'Действия'\n\t\t\t\t},\n\t\t\t\tbody: {\n\t\t\t\t\temptyDataSourceMessage: 'Тут пока ни одной записи...',\n\t\t\t\t\taddTooltip: 'Добавить документ',\n\t\t\t\t\tdeleteTooltip: 'Удалить документ',\n\t\t\t\t\teditTooltip: 'Редактировать документ',\n\t\t\t\t\teditRow: {\n\t\t\t\t\t\tcancelTooltip: 'Отменить',\n\t\t\t\t\t\tsaveTooltip: 'Сохранить'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttoolbar: {\n\t\t\t\t\tsearchTooltip: 'Поиск',\n\t\t\t\t\tsearchPlaceholder: 'Найти документ'\n\n\t\t\t\t},\n\t\t\t\tpagination: {\n\t\t\t\t\tlabelRowsSelect: 'linhas',\n\t\t\t\t\tlabelDisplayedRows: '{count} de {from}-{to}',\n\t\t\t\t\tfirstTooltip: 'Primeira página',\n\t\t\t\t\tpreviousTooltip: 'Página anterior',\n\t\t\t\t\tnextTooltip: 'Próxima página',\n\t\t\t\t\tlastTooltip: 'Última página'\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 300,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }),\n);\n\ninterface SelectProps {\n    liftStateUpFunc: (data: any) => any,\n    menuItems: Array<string>,\n    selectID: string,\n    labelID: string,\n    labelText: string,\n}\n\nexport default function SimpleSelect(props: SelectProps) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('');\n\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setValue(event.target.value as string);\n        // поднимаем состояние родительскому компоненту\n        props.liftStateUpFunc(event.target.value as string);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id={props.labelID}>{props.labelText}</InputLabel>\n                <Select\n                    labelId={props.labelID}\n                    id={props.selectID}\n                    value={value}\n                    onChange={handleChange}\n                >\n                    {\n                        props.menuItems.map((elem) => {\n                            return <MenuItem value={elem}>{elem}</MenuItem>\n                        })\n                    }\n                </Select>\n            </FormControl>\n        </div>\n    );\n}","import React from 'react';\nimport Table from './components/table'\nimport SimpleSelect from './components/select'\n\n\n\n\nexport default function App() {\n  \n  let [columns, updateColumns] = React.useState<any>([]);\n  let [tableData, updateTableData] = React.useState<any>([]);\n  let [selectedOptions, updateOptions] = React.useState<any>('Таблица документов');\n\n  function onTableChange(data: any) {\n    updateTableData(data);\n    console.log(data)\n  }\n\n  function onSelectChange(data: any) {\n    updateOptions(data);\n\n    // при изменении любого селекта должны удаляться все данные таблицы\n    updateTableData(false);\n    //\n    \n    let columns;\n    if (data === 'Виноград 2') {\n      columns = [\n        { title: 'Номер договора', field: 'docNumber' },\n\n        { title: 'Surname', field: 'surname' },\n        { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n        {\n          title: 'Birth Place',\n          field: 'birthCity',\n          lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n        },\n      ]\n    }\n\n\n    updateColumns(columns);\n  }\n\n  return (\n    <>\n      <SimpleSelect\n        labelText=\"Объект строительства\"\n        liftStateUpFunc={onSelectChange}\n        menuItems={[\"Виноград 2\", \"Оазис 2\", \"Баланс\"]}\n        selectID=\"select-development-project\"\n        labelID=\"select-development-project-label\"\n        \n      />\n      <Table\n        tableTitle={selectedOptions}\n        liftStateUpFunc={onTableChange}\n        columns={columns}\n        currentData={tableData}\n      />\n    </>\n\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}